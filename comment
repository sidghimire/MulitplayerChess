
def countBoardPower(board,color):
    sum=0
    if(color>0):
        for i in range(8):
            for j in range(8):
                if(board[i][j]>0):
                    sum=sum+board[i][j]
    if(color<0):
        for i in range(8):
            for j in range(8):
                if(board[i][j]<0):
                    sum=sum+board[i][j]              
    return sum


def minmaxAlgorithm(board,depth):
    oppCount=countNumOpp(board)
    for i in range(8):
        for j in range(8):
            if(board[i][j]>0):
                if(board[i][j]==1):
                    options=pawnLogic(j,i,"option")
                    print(countBoardPower(board,-1))
